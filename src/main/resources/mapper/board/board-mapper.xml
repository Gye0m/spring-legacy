<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board">
	
	<select id="getBoardTypeMap" resultType="boardType">
		SELECT BOARD_CD AS "boardCd" , BOARD_NAME 
		FROM BOARD_TYPE
	</select>
	
	<select id="selectListCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		LEFT JOIN MEMBER M ON BOARD_WRITER = USER_NO
		WHERE B.STATUS = 'Y' AND BOARD_CD = #{boardCode}
		<if test="keyword != null and keyword != ''">
			AND 
			<choose>
				<when test="condition.equals('title')">
					BOARD_TITLE LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					BOARD_CONTENT LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('titleAndContent')">
					(BOARD_TITLE LIKE '%' || #{keyword} || '%' OR
					BOARD_CONTENT LIKE '%' || #{keyword} || '%')
				</when>
			</choose>
		</if>		
	</select>
	
	<select id="selectList" parameterType="map" resultType="board">
		SELECT 
			BOARD_NO ,
			BOARD_TITLE , 
			USER_NAME AS BOARD_WRITER ,
			COUNT , 
			CREATE_DATE
		FROM BOARD B
		LEFT JOIN MEMBER M ON BOARD_WRITER = USER_NO
		WHERE B.STATUS = 'Y' AND BOARD_CD = #{boardCode}
		<if test="keyword != null and keyword != ''">
			AND 
			<choose>
				<when test="condition.equals('title')">
					BOARD_TITLE LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					BOARD_CONTENT LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('titleAndContent')">
					(BOARD_TITLE LIKE '%' || #{keyword} || '%' OR
					BOARD_CONTENT LIKE '%' || #{keyword} || '%')
				</when>
			</choose>
		</if>	
		ORDER BY BOARD_NO DESC
		OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	
  	
</mapper>






